"""Create start tables

Revision ID: 3fe5c5226dbe
Revises: 
Create Date: 2025-05-22 21:16:33.266682

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '3fe5c5226dbe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee_client')
    op.drop_index('ix_categories_description', table_name='categories')
    op.drop_index('ix_categories_id', table_name='categories')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_table('categories')
    op.drop_index('ix_clients_cnpj', table_name='clients')
    op.drop_index('ix_clients_email', table_name='clients')
    op.drop_index('ix_clients_id', table_name='clients')
    op.drop_index('ix_clients_name', table_name='clients')
    op.drop_table('clients')
    op.drop_index('ix_logs_id', table_name='logs')
    op.drop_table('logs')
    op.drop_index('ix_employees_cpf', table_name='employees')
    op.drop_index('ix_employees_email', table_name='employees')
    op.drop_index('ix_employees_id', table_name='employees')
    op.drop_index('ix_employees_name', table_name='employees')
    op.drop_table('employees')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('cpf', sa.VARCHAR(), nullable=True),
    sa.Column('category_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_employees_name', 'employees', ['name'], unique=False)
    op.create_index('ix_employees_id', 'employees', ['id'], unique=False)
    op.create_index('ix_employees_email', 'employees', ['email'], unique=1)
    op.create_index('ix_employees_cpf', 'employees', ['cpf'], unique=1)
    op.create_table('logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('action', sa.VARCHAR(), nullable=False),
    sa.Column('table', sa.VARCHAR(), nullable=False),
    sa.Column('record_id', sa.INTEGER(), nullable=True),
    sa.Column('performed_by', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('data', sqlite.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_logs_id', 'logs', ['id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('cnpj', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_clients_name', 'clients', ['name'], unique=False)
    op.create_index('ix_clients_id', 'clients', ['id'], unique=False)
    op.create_index('ix_clients_email', 'clients', ['email'], unique=1)
    op.create_index('ix_clients_cnpj', 'clients', ['cnpj'], unique=1)
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_categories_name', 'categories', ['name'], unique=False)
    op.create_index('ix_categories_id', 'categories', ['id'], unique=False)
    op.create_index('ix_categories_description', 'categories', ['description'], unique=False)
    op.create_table('employee_client',
    sa.Column('employee_id', sa.INTEGER(), nullable=False),
    sa.Column('client_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('employee_id', 'client_id')
    )
    # ### end Alembic commands ###
